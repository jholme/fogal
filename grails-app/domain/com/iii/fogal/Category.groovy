package com.iii.fogal

import java.nio.file.Path
import java.nio.file.Paths
import java.nio.file.Files

class Category {
	
	def grailsApplication
	def categoryService

	String name
	String description
	String path
	List<Gallery> galleries = []
	HomePageTile homePageTile
	
	static hasMany = [galleries: Gallery]
	static mapping = {
		galleries cascade: 'all-delete-orphan'
	}

    static constraints = {
		name nullable: false, blank: false
		description nullable: true, blank: true
		path nullable: false, blank: false, unique: true
		homePageTile nullable:true, blank: true, inList: HomePageTile.values() as List
    }
	
	/*
	 * http://grails.1312388.n4.nabble.com/Is-it-possible-to-customize-the-hibernate-plugin-autogenerated-CRUD-methods-on-my-grails-app-td2318957.html
	 */
	def afterInsert() {
		//super.save()
		//println grailsApplication.config.file.upload.directory
		String imageDir = grailsApplication.config.file.upload.directory ?: 'C:\fogalFiles'//'/fogalFiles'
		//println System.properties
		Path categoryPath = Paths.get(imageDir, path)
		File categoryDir = categoryPath.toFile()
		println "categoryDir: ${categoryDir}"
		if (!categoryDir.exists()) categoryDir.mkdir()
//		String fileSep = System.properties.'file.separator'
//		String newDir = "${imageDir}${fileSep}${path}"
//		File dirFile = new File(newDir)
//		println "dirFile: ${dirFile}"
//		if (!dirFile.exists()) dirFile.mkdir()
	}
	
	def beforeDelete() {
		println("category.beforeDelete")
		categoryService.deleteCategoryFromFileSystem(this)
	}
	
	public String toString() {
		this.path
	}
}
