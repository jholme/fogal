package com.iii.fogal

import java.nio.file.Path
import java.nio.file.Paths
import java.nio.file.Files

class Category {
	
	def grailsApplication
	def categoryService

	String name
	String description
	String path
	List<Gallery> galleries = []
	HomePageTile homePageTile
	
	static hasMany = [galleries: Gallery]
	static mapping = {
		galleries cascade: 'all-delete-orphan'
	}

    static constraints = {
		name nullable: false, blank: false
		description nullable: true, blank: true
		path nullable: false, blank: false, unique: true
//		homePageTile nullable:true, blank: true, inList: [TILE_01,TILE_02,TILE_03,TILE_04,TILE_05,TILE_06,TILE_07,TILE_08,TILE_09,TILE_10]
		homePageTile nullable:true, blank: true, inList: HomePageTile.values() as List
    }
	
//	static final String TILE_01 = 'tile_01'
//	static final String TILE_02 = 'tile_02'
//	static final String TILE_03 = 'tile_03'
//	static final String TILE_04 = 'tile_04'
//	static final String TILE_05 = 'tile_05'
//	static final String TILE_06 = 'tile_06'
//	static final String TILE_07 = 'tile_07'
//	static final String TILE_08 = 'tile_08'
//	static final String TILE_09 = 'tile_09'
//	static final String TILE_10 = 'tile_10'
	
	/*
	 * http://grails.1312388.n4.nabble.com/Is-it-possible-to-customize-the-hibernate-plugin-autogenerated-CRUD-methods-on-my-grails-app-td2318957.html
	 */
	def afterInsert() {
		//super.save()
		//println grailsApplication.config.file.upload.directory
		String imageDir = grailsApplication.config.file.upload.directory ?: 'C:\fogalFiles'//'/fogalFiles'
		//println System.properties
		Path categoryPath = Paths.get(imageDir, path)
		File categoryDir = categoryPath.toFile()
		println "categoryDir: ${categoryDir}"
		if (!categoryDir.exists()) categoryDir.mkdir()
//		String fileSep = System.properties.'file.separator'
//		String newDir = "${imageDir}${fileSep}${path}"
//		File dirFile = new File(newDir)
//		println "dirFile: ${dirFile}"
//		if (!dirFile.exists()) dirFile.mkdir()
	}
	
	def beforeDelete() {
		println("category.beforeDelete")
		categoryService.deleteCategoryFromFileSystem(this)
	}
	
	public String toString() {
		this.path
	}
}

//public enum HomePageTile {
//	TILE_00("tile_00"),
//	TILE_01("tile_01"),
//	TILE_02("tile_02"),
//	TILE_03("tile_03"),
//	TILE_04("tile_04"),
//	TILE_05("tile_05"),
//	TILE_06("tile_06"),
//	TILE_07("tile_07"),
//	TILE_08("tile_08"),
//	TILE_09("tile_09"),
//	TILE_10("tile_10")
//	
//	String cssId
//	
//	public HomePageTile(String cssId) {
//		this.cssId = cssId
//	}
//	
//	HomePageTile findByCssId(String css_id) {
//		HomePageTile.findWhere(cssId:css_id)
//	}
//	
//}
